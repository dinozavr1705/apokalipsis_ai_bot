import json
import time
import base64
import requests
import logging
from io import BytesIO
from typing import Optional
import tempfile
import os
import re

import telebot
from telebot import types
from openai import OpenAI


class FusionBrainAPI:
    def __init__(self, url, api_key, secret_key):
        self.URL = url
        self.AUTH_HEADERS = {
            'X-Key': f'Key {api_key}',
            'X-Secret': f'Secret {secret_key}',
        }

    def get_pipeline(self):
        try:
            response = requests.get(self.URL + 'key/api/v1/pipelines', headers=self.AUTH_HEADERS)
            response.raise_for_status()
            data = response.json()
            return data[0]['id']
        except Exception as e:
            logging.error(f"Failed to get pipeline: {e}")
            return None

    def generate(self, prompt, pipeline_id, images=1, width=1024, height=1024, style="DEFAULT",
                 negative_prompt="dark colours"):
        try:
            params = {
                "type": "GENERATE",
                "numImages": images,
                "width": width,
                "height": height,
                "style": style,
                "generateParams": {
                    "query": prompt
                },
                "negativePromptDecoder": negative_prompt
            }

            data = {
                'pipeline_id': (None, pipeline_id),
                'params': (None, json.dumps(params), 'application/json')
            }
            response = requests.post(self.URL + 'key/api/v1/pipeline/run', headers=self.AUTH_HEADERS, files=data)
            response.raise_for_status()
            data = response.json()
            return data['uuid']
        except Exception as e:
            logging.error(f"Generation failed: {e}")
            return None

    def check_generation(self, request_id, attempts=10, delay=10):
        while attempts > 0:
            try:
                response = requests.get(self.URL + 'key/api/v1/pipeline/status/' + request_id,
                                        headers=self.AUTH_HEADERS)
                response.raise_for_status()
                data = response.json()

                if data['status'] == 'DONE':
                    return data['result']['files']
                elif data['status'] == 'FAIL':
                    logging.error(f"Generation failed: {data}")
                    return None

                attempts -= 1
                time.sleep(delay)
            except Exception as e:
                logging.error(f"Status check failed: {e}")
                attempts -= 1
                time.sleep(delay)
        return None


class ExpertSystem:
    def __init__(self):
        self.knowledge_base = {
            # –ë–ê–ó–û–í–´–ï –ü–û–¢–†–ï–ë–ù–û–°–¢–ò
            r".*–æ—á–∏—Å—Ç–∏—Ç—å.*–≤–æ–¥.*|.*—Ñ–∏–ª—å—Ç—Ä.*–≤–æ–¥.*|.*–ø–∏—Ç—å.*–≤–æ–¥.*": {
                "response": """üíß **–û–ß–ò–°–¢–ö–ê –í–û–î–´ –ë–ï–ó –§–ò–õ–¨–¢–†–ê:**
1. **–ö–∏–ø—è—á–µ–Ω–∏–µ** - 10+ –º–∏–Ω—É—Ç —É–±–∏–≤–∞–µ—Ç –±–∞–∫—Ç–µ—Ä–∏–∏
2. **–°–æ–ª–Ω–µ—á–Ω–∞—è –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è** - –≤ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –±—É—Ç—ã–ª–∫–µ –Ω–∞ —Å–æ–ª–Ω—Ü–µ 6 —á–∞—Å–æ–≤
3. **–ü–µ—Å—á–∞–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä** - –ø–µ—Å–æ–∫ + —É–≥–æ–ª—å + —Ç–∫–∞–Ω—å
4. **–•–∏–º–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞** - –π–æ–¥ (5 –∫–∞–ø–µ–ª—å –Ω–∞ –ª–∏—Ç—Ä) –∏–ª–∏ —Ö–ª–æ—Ä
5. **–î–∏—Å—Ç–∏–ª–ª—è—Ü–∏—è** - –∫–∏–ø—è—á–µ–Ω–∏–µ —Å —Å–±–æ—Ä–æ–º –ø–∞—Ä–∞""",
                "category": "water"
            },

            r".*—Ä–∞—Å—Ç–µ–Ω.*–µ—Å—Ç—å.*|.*—Å—ä–µ–¥–æ–±–Ω.*—Ä–∞—Å—Ç–µ–Ω.*|.*—è–≥–æ–¥.*–µ—Å—Ç—å.*": {
                "response": """üåø **–°–™–ï–î–û–ë–ù–´–ï –†–ê–°–¢–ï–ù–ò–Ø –õ–ï–°–ê:**
‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ:**
- –ö—Ä–∞–ø–∏–≤–∞ (–≤–∞—Ä–∏—Ç—å 5 –º–∏–Ω—É—Ç)
- –û–¥—É–≤–∞–Ω—á–∏–∫ (–ª–∏—Å—Ç—å—è –∏ –∫–æ—Ä–Ω–∏)
- –ü–æ–¥–æ—Ä–æ–∂–Ω–∏–∫ (–º–æ–ª–æ–¥—ã–µ –ª–∏—Å—Ç—å—è)
- –©–∞–≤–µ–ª—å (—Å—ã—Ä–æ–π –∏–ª–∏ –≤–∞—Ä–µ–Ω—ã–π)
- –ö–ª–µ–≤–µ—Ä (—Ü–≤–µ—Ç–∫–∏ –∏ –ª–∏—Å—Ç—å—è)

‚ùå **–û–ü–ê–°–ù–û:**
- –í–æ–ª—á—å–µ –ª—ã–∫–æ
- –ë–æ–ª–∏–≥–æ–ª–æ–≤
- –í–æ—Ä–æ–Ω–∏–π –≥–ª–∞–∑
- –õ–∞–Ω–¥—ã—à

‚ö†Ô∏è **–ü—Ä–∞–≤–∏–ª–æ:** –ù–µ –∑–Ω–∞–µ—à—å - –Ω–µ –µ—à—å! –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–π –º–∞–ª–µ–Ω—å–∫–∏–π –∫—É—Å–æ—á–µ–∫""",
                "category": "food"
            },

            r".*—É–∫—Ä—ã—Ç–∏.*|.*—É–±–µ–∂–∏—â.*|.*–ø–æ—Å—Ç—Ä–æ–∏—Ç—å.*—É–∫—Ä—ã—Ç–∏.*": {
                "response": """üè† **–ü–†–û–°–¢–û–ï –£–ö–†–´–¢–ò–ï –ò–ó –ü–û–î–†–£–ß–ù–´–• –°–†–ï–î–°–¢–í:**
1. **–ù–∞–≤–µ—Å** - –ø–∞–ª–∫–∞ –Ω–∞ –¥–µ—Ä–µ–≤–µ + –≤–µ—Ç–∫–∏ + –ª–∏—Å—Ç—å—è
2. **–®–∞–ª–∞—à** - –∫–∞—Ä–∫–∞—Å –∏–∑ –≤–µ—Ç–æ–∫ + –ª–∞–ø–Ω–∏–∫
3. **–ó–µ–º–ª—è–Ω–∫–∞** - —è–º–∞ + –±—Ä–µ–≤–Ω–∞ + –¥–µ—Ä–Ω
4. **–í –∑–¥–∞–Ω–∏—è—Ö** - –ø–æ–¥–≤–∞–ª—ã, —á–µ—Ä–¥–∞–∫–∏, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

**–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:** –ø–ª–∞—Å—Ç–∏–∫, –¥–æ—Å–∫–∏, –≤–µ—Ç–∫–∏, —Ç–∫–∞–Ω—å, –∑–µ–º–ª—è""",
                "category": "shelter"
            },

            r".*—Ä–∞–∑–∂–µ—á—å.*–æ–≥–æ–Ω—å.*|.*–∫–æ—Å—Ç–µ—Ä.*–±–µ–∑.*—Å–ø–∏—á–µ–∫.*": {
                "response": """üî• **–†–ê–ó–ñ–ò–ì–ê–ù–ò–ï –û–ì–ù–Ø –ë–ï–ó –°–ü–ò–ß–ï–ö:**
1. **–õ–∏–Ω–∑–∞** - –ª—É–ø–∞, –æ—á–∫–∏, –±—É—Ç—ã–ª–∫–∞ —Å –≤–æ–¥–æ–π
2. **–û–≥–Ω–∏–≤–æ** - –∫–∞–º–µ–Ω—å –∏ –º–µ—Ç–∞–ª–ª
3. **–¢—Ä–µ–Ω–∏–µ** - –ª—É–∫-—Å–≤–µ—Ä–ª–æ –∏–ª–∏ —Ä—É—á–Ω–æ–µ —Å–≤–µ—Ä–ª–µ–Ω–∏–µ
4. **–ë–∞—Ç–∞—Ä–µ–π–∫–∞** + —Ñ–æ–ª—å–≥–∞/–≤–∞—Ç–∞
5. **–•–∏–º–∏—è** - –º–∞—Ä–≥–∞–Ω—Ü–æ–≤–∫–∞ + –≥–ª–∏—Ü–µ—Ä–∏–Ω

**–†–∞—Å—Ç–æ–ø–∫–∞:** —Å—É—Ö–∞—è —Ç—Ä–∞–≤–∞, –±–µ—Ä–µ—Å—Ç–∞, –ø—É—Ö, —Å–º–æ–ª–∞""",
                "category": "fire"
            },

            r".*–æ—à–∏–±–∫.*–≥–æ—Ä–æ–¥.*|.*–Ω–µ–ª—å–∑—è.*–¥–µ–ª–∞—Ç—å.*–≥–æ—Ä–æ–¥.*": {
                "response": """üö´ **–ß–ê–°–¢–´–ï –û–®–ò–ë–ö–ò –í –ì–û–†–û–î–ï:**
1. –®—É–º–µ—Ç—å –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ
2. –•–æ–¥–∏—Ç—å –¥–Ω–µ–º –ø–æ –æ—Ç–∫—Ä—ã—Ç—ã–º –º–µ—Å—Ç–∞–º
3. –î–æ–≤–µ—Ä—è—Ç—å –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞–º
4. –ù–æ—Å–∏—Ç—å —è—Ä–∫—É—é –æ–¥–µ–∂–¥—É
5. –û—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –≤—ã—Å–æ—Ç–∫–∞—Ö (—Ä–∏—Å–∫ –æ–±—Ä—É—à–µ–Ω–∏—è)
6. –ù–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–¥–∞–Ω–∏—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
7. –ù–µ –∏–º–µ—Ç—å –∑–∞–ø–∞—Å–Ω—ã—Ö –ø—É—Ç–µ–π –æ—Ç—Å—Ç—É–ø–ª–µ–Ω–∏—è""",
                "category": "urban_survival"
            },

            # –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –ó–î–û–†–û–í–¨–ï
            r".*–æ–±–µ–∑–∑–∞—Ä–∞–∑–∏—Ç—å.*—Ä–∞–Ω.*|.*–ª–µ—á–∏—Ç—å.*—Ä–∞–Ω.*|.*–ø–æ—Ä–µ–∑.*": {
                "response": """ü©π **–û–ë–ï–ó–ó–ê–†–ê–ñ–ò–í–ê–ù–ò–ï –†–ê–ù –ë–ï–ó –õ–ï–ö–ê–†–°–¢–í:**
1. **–ö–∏–ø—è—á–µ–Ω–∞—è –≤–æ–¥–∞** - –ø—Ä–æ–º—ã—Ç—å —Ä–∞–Ω—É
2. **–°–æ–ª–µ–≤–æ–π —Ä–∞—Å—Ç–≤–æ—Ä** - 1 —á–∞–π–Ω–∞—è –ª–æ–∂–∫–∞ –Ω–∞ –ª–∏—Ç—Ä
3. **–¢—Ä–∞–≤—ã** - –ø–æ–¥–æ—Ä–æ–∂–Ω–∏–∫, —Ç—ã—Å—è—á–µ–ª–∏—Å—Ç–Ω–∏–∫, —Ä–æ–º–∞—à–∫–∞
4. **–î—Ä–µ–≤–µ—Å–Ω—ã–π —É–≥–æ–ª—å** - —Ä–∞—Å—Ç–æ–ª–æ—á—å –∏ –ø—Ä–∏—Å—ã–ø–∞—Ç—å
5. **–ú–µ–¥** - –ø—Ä–∏—Ä–æ–¥–Ω—ã–π –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫

**–í–∞–∂–Ω–æ:** –º–µ–Ω—è—Ç—å –ø–æ–≤—è–∑–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ""",
                "category": "medical"
            },

            r".*–ø–µ—Ä–µ–¥–≤–∏–≥–∞—Ç—å—Å—è.*–≥–æ—Ä–æ–¥.*|.*–Ω–µ.*–∑–∞–º–µ—á–µ–Ω.*|.*—Å–∫—Ä—ã—Ç.*–¥–≤–∏–∂–µ–Ω.*": {
                "response": """üö∂ **–°–ö–†–´–¢–ù–û–ï –ü–ï–†–ï–î–í–ò–ñ–ï–ù–ò–ï –ü–û –ì–û–†–û–î–£:**
1. **–¢–æ–ª—å–∫–æ –Ω–æ—á—å—é** - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–º–Ω–æ—Ç—É
2. **–¢–µ–Ω–∏ –∏ —É–∫—Ä—ã—Ç–∏—è** - –≤–¥–æ–ª—å —Å—Ç–µ–Ω, –≤ –ø–æ–¥–≤–æ—Ä–æ—Ç–Ω—è—Ö
3. **–ú–µ–¥–ª–µ–Ω–Ω–æ –∏ —Ç–∏—Ö–æ** - —Å–ª—É—à–∞—Ç—å –∫–∞–∂–¥—ã–π –∑–≤—É–∫
4. **–ò–∑–±–µ–≥–∞—Ç—å:** 
   - –ì–ª–∞–≤–Ω—ã–µ —É–ª–∏—Ü—ã
   - –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–ª–æ—â–∞–¥–∏
   - –°—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –∑–¥–∞–Ω–∏—è
5. **–ü—Ä–æ–≤–µ—Ä—è—Ç—å –º–∞—Ä—à—Ä—É—Ç** —á–µ—Ä–µ–∑ –±–∏–Ω–æ–∫–ª—å""",
                "category": "security"
            },

            r".*–æ–ø–∞—Å–Ω.*–∑–¥–∞–Ω.*|.*–æ–±—Ä—É—à–µ–Ω.*|.*—Ä–∞–∑—Ä—É—à–µ–Ω.*–∑–¥–∞–Ω.*": {
                "response": """üèöÔ∏è **–ü–†–ò–ó–ù–ê–ö–ò –û–ü–ê–°–ù–û–ì–û –ó–î–ê–ù–ò–Ø:**
üî¥ **–û–ü–ê–°–ù–û:**
- –¢—Ä–µ—â–∏–Ω—ã –≤ —Å—Ç–µ–Ω–∞—Ö
- –ù–∞–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –û–±—Ä—É—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è
- –ó–∞–ø–∞—Ö –≥–∞–∑–∞
- –°–∫—Ä–∏–ø—ã –∏ —à—É–º—ã

üü¢ **–ë–ï–ó–û–ü–ê–°–ù–û:**
- –ù–∏–∑–∫–∏–µ —ç—Ç–∞–∂–∏
- –ë–µ—Ç–æ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –¶–µ–ª—ã–µ –æ–∫–Ω–∞ –∏ –¥–≤–µ—Ä–∏
- –ù–µ—Ç –∑–∞–ø–∞—Ö–æ–≤""",
                "category": "shelter"
            },

            r".*–∑–∞—â–∏—Ç–∏—Ç—å.*—É–∫—Ä—ã—Ç–∏.*|.*–º–∞—Ä–æ–¥–µ—Ä.*|.*–∑–∞—â–∏—Ç–∞.*–æ—Ç.*–ª—é–¥–µ–π.*": {
                "response": """üõ°Ô∏è **–ó–ê–©–ò–¢–ê –£–ö–†–´–¢–ò–Ø –û–¢ –ú–ê–†–û–î–ï–†–û–í:**
1. **–°–∫—Ä—ã—Ç—ã–π –≤—Ö–æ–¥** - –∑–∞ –º–∞—Å–∫–∏—Ä–æ–≤–∫–æ–π
2. **–õ–æ–≤—É—à–∫–∏** - —à—É–º–æ–≤—ã–µ, —Å–≤–µ—Ç–æ–≤—ã–µ
3. **–ù–∞–±–ª—é–¥–µ–Ω–∏–µ** - –±–∏–Ω–æ–∫–ª—å, –∑–µ—Ä–∫–∞–ª–∞
4. **–ë–∞—Ä—Ä–∏–∫–∞–¥—ã** - –º–µ–±–µ–ª—å, –¥–æ—Å–∫–∏, –ø—Ä–æ–≤–æ–ª–æ–∫–∞
5. **–ó–∞–ø–∞—Å–Ω–æ–π –≤—ã—Ö–æ–¥** - –≤—Å–µ–≥–¥–∞ –∏–º–µ–π –ø–ª–∞–Ω –ë
6. **–ù–æ—á–Ω—ã–µ –¥–µ–∂—É—Ä—Å—Ç–≤–∞** - —Å–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞""",
                "category": "security"
            },

            r".*—Ä–∞–¥–∏–∞—Ü.*|.*—Ö–∏–º–∏—á–µ—Å–∫.*–∑–∞—Ä–∞–∂–µ–Ω.*|.*–æ—Ç—Ä–∞–≤–ª–µ–Ω.*": {
                "response": """‚ò¢Ô∏è **–î–ï–ô–°–¢–í–ò–Ø –ü–†–ò –ó–ê–†–ê–ñ–ï–ù–ò–ò:**
1. **–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É–∫—Ä—ã—Ç—å—Å—è** - –ø–æ–¥–≤–∞–ª, –º–µ—Ç—Ä–æ
2. **–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è** - –æ–∫–Ω–∞, –¥–≤–µ—Ä–∏, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é
3. **–ü—Ä–∏–Ω—è—Ç—å –π–æ–¥** - –≤ –ø–µ—Ä–≤—ã–µ 6 —á–∞—Å–æ–≤
4. **–°–Ω—è—Ç—å –æ–¥–µ–∂–¥—É** - –æ—Å—Ç–∞–≤–∏—Ç—å —Å–Ω–∞—Ä—É–∂–∏
5. **–ü—Ä–æ–º—ã—Ç—å –∫–æ–∂—É** - –≤–æ–¥–æ–π —Å –º—ã–ª–æ–º
6. **–ù–µ –µ—Å—Ç—å –º–µ—Å—Ç–Ω—É—é –ø–∏—â—É** - —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å–µ—Ä–≤—ã""",
                "category": "threats"
            },

            # –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï –ò –î–ï–ô–°–¢–í–ò–Ø
            r".*–æ—Å—Ç–∞–≤–∞—Ç—å—Å—è.*–Ω–∞.*–º–µ—Å—Ç–µ.*|.*–¥–≤–∏–≥–∞—Ç—å—Å—è.*|.*—É–±–µ–∂–∏—â.*": {
                "response": """üìç **–û–°–¢–ê–í–ê–¢–¨–°–Ø –ò–õ–ò –î–í–ò–ì–ê–¢–¨–°–Ø?**
üü¢ **–û–°–¢–ê–í–ê–¢–¨–°–Ø –ï–°–õ–ò:**
- –£–∫—Ä—ã—Ç–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ
- –ï—Å—Ç—å –∑–∞–ø–∞—Å —Ä–µ—Å—É—Ä—Å–æ–≤
- –ú–µ—Å—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞–∫–æ–º–∞
- –ù–µ—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —É–≥—Ä–æ–∑—ã

üî¥ **–î–í–ò–ì–ê–¢–¨–°–Ø –ï–°–õ–ò:**
- –£–≥—Ä–æ–∑–∞ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è
- –ö–æ–Ω—á–∏–ª–∏—Å—å —Ä–µ—Å—É—Ä—Å—ã
- –ú–µ—Å—Ç–Ω–æ—Å—Ç—å –æ–ø–∞—Å–Ω–∞
- –ï—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ""",
                "category": "planning"
            },

            r".*–Ω–∞–±–æ—Ä.*–≤–µ—â.*|.*—Ä—é–∫–∑–∞–∫.*|.*—Ç—Ä–µ–≤–æ–∂–Ω.*—á–µ–º–æ–¥–∞–Ω.*": {
                "response": """üéí **–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –ù–ê–ë–û–† –í–´–ñ–ò–í–ê–ù–ò–Ø:**
1. **–í–æ–¥–∞** - 2 –ª–∏—Ç—Ä–∞ + —Ñ–∏–ª—å—Ç—Ä
2. **–ï–¥–∞** - –∫–æ–Ω—Å–µ—Ä–≤—ã, —à–æ–∫–æ–ª–∞–¥, –æ—Ä–µ—Ö–∏
3. **–ê–ø—Ç–µ—á–∫–∞** - –±–∏–Ω—Ç—ã, –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫, –æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ
4. **–û—Ä—É–∂–∏–µ** - –Ω–æ–∂, –¥—É–±–∏–Ω–∫–∞
5. **–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã** - –º—É–ª—å—Ç–∏—Ç—É–ª, —Ñ–æ–Ω–∞—Ä—å, —Å–ø–∏—á–∫–∏
6. **–û–¥–µ–∂–¥–∞** - —Ç–µ–ø–ª–∞—è, –Ω–µ–ø—Ä–æ–º–æ–∫–∞–µ–º–∞—è
7. **–î–æ–∫—É–º–µ–Ω—Ç—ã** - –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö –±—É–º–∞–≥""",
                "category": "equipment"
            },

            r".*—Å–∏–≥–Ω–∞–ª.*–±–µ–¥—Å—Ç–≤.*|.*–ø–æ–¥–∞—Ç—å.*—Å–∏–≥–Ω–∞–ª.*|.*—Ä–∞—Ü–∏—è.*": {
                "response": """üÜò **–°–ò–ì–ù–ê–õ–´ –ë–ï–î–°–¢–í–ò–Ø –ë–ï–ó –†–ê–¶–ò–ò:**
1. **–î—ã–º** - —Ç—Ä–∏ –∫–æ—Å—Ç—Ä–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–º
2. **–ó–µ—Ä–∫–∞–ª–æ** - —Å–æ–ª–Ω–µ—á–Ω—ã–µ –∑–∞–π—á–∏–∫–∏
3. **–°–≤–∏—Å—Ç–æ–∫** - —Ç—Ä–∏ –∫–æ—Ä–æ—Ç–∫–∏—Ö, —Ç—Ä–∏ –¥–ª–∏–Ω–Ω—ã—Ö
4. **–§–æ–Ω–∞—Ä—å** - SOS (...---...)
5. **–Ø—Ä–∫–∞—è —Ç–∫–∞–Ω—å** - –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–µ—Å—Ç–µ
6. **–ö–∞–º–µ–Ω—å/–ø–∞–ª–∫–∞** - –≤—ã–ª–æ–∂–∏—Ç—å HELP –∏–ª–∏ SOS""",
                "category": "communication"
            },

            r".*–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è.*|.*–∫–∞—Ä—Ç.*|.*–∫–æ–º–ø–∞—Å.*": {
                "response": """üß≠ **–û–†–ò–ï–ù–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó –ö–ê–†–¢–´ –ò –ö–û–ú–ü–ê–°–ê:**
1. **–°–æ–ª–Ω—Ü–µ** - –≤—Å—Ç–∞–µ—Ç –Ω–∞ –≤–æ—Å—Ç–æ–∫–µ, —Å–∞–¥–∏—Ç—Å—è –Ω–∞ –∑–∞–ø–∞–¥–µ
2. **–ó–≤–µ–∑–¥—ã** - –ü–æ–ª—è—Ä–Ω–∞—è –∑–≤–µ–∑–¥–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ–≤–µ—Ä
3. **–ú–æ—Ö** - —Ä–∞—Å—Ç–µ—Ç —Å —Å–µ–≤–µ—Ä–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–µ—Ä–µ–≤—å–µ–≤
4. **–ú—É—Ä–∞–≤–µ–π–Ω–∏–∫–∏** - —Å —é–∂–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–µ—Ä–µ–≤—å–µ–≤
5. **–¶–µ—Ä–∫–≤–∏** - –∞–ª—Ç–∞—Ä—å –Ω–∞ –≤–æ—Å—Ç–æ–∫–µ
6. **–¢–µ–ª–µ—Ñ–æ–Ω** - GPS –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞""",
                "category": "navigation"
            },

            r".*—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å.*–ø—Ä–æ–¥—É–∫—Ç.*|.*—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫.*|.*–µ–¥–∞.*–Ω–∞–¥–æ–ª–≥–æ.*": {
                "response": """ü•´ **–°–û–•–†–ê–ù–ï–ù–ò–ï –ü–†–û–î–£–ö–¢–û–í –ë–ï–ó –•–û–õ–û–î–ò–õ–¨–ù–ò–ö–ê:**
1. **–ö–æ–Ω—Å–µ—Ä–≤–∞—Ü–∏—è** - —Å–æ–ª—å, —É–∫—Å—É—Å, —Å–∞—Ö–∞—Ä
2. **–°—É—à–∫–∞** - –º—è—Å–æ, —Ñ—Ä—É–∫—Ç—ã, –æ–≤–æ—â–∏
3. **–ö–æ–ø—á–µ–Ω–∏–µ** - –¥—ã–º –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –±–∞–∫—Ç–µ—Ä–∏–π
4. **–ó–∞–∫–∞–ø—ã–≤–∞–Ω–∏–µ** - –≤ –∑–µ–º–ª–µ –ø—Ä–æ—Ö–ª–∞–¥–Ω–µ–µ
5. **–í–æ–¥—è–Ω–æ–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ** - –≤ –∫–æ–ª–æ–¥—Ü–µ –∏–ª–∏ —Ä–µ–∫–µ
6. **–°–æ–ª–µ–Ω–∏–µ** - –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –º—è—Å–∞ –∏ —Ä—ã–±—ã""",
                "category": "food"
            },

            # –î–û–õ–ì–û–°–†–û–ß–ù–û–ï –í–´–ñ–ò–í–ê–ù–ò–ï
            r".*—Ö—Ä–∞–Ω–µ–Ω.*–≤–æ–¥.*|.*–±–æ–ª—å—à.*–≤–æ–¥.*|.*–∑–∞–ø–∞—Å.*–≤–æ–¥.*": {
                "response": """üí¶ **–î–û–õ–ì–û–°–†–û–ß–ù–û–ï –•–†–ê–ù–ï–ù–ò–ï –í–û–î–´:**
1. **–ß–∏—Å—Ç—ã–µ –µ–º–∫–æ—Å—Ç–∏** - –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –±—É—Ç—ã–ª–∏, –±–æ—á–∫–∏
2. **–¢–µ–º–Ω–æ–µ –º–µ—Å—Ç–æ** - –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–æ–¥–æ—Ä–æ—Å–ª–µ–π
3. **–ü—Ä–æ—Ö–ª–∞–¥–∞** - –ø–æ–¥–≤–∞–ª –∏–ª–∏ –∑–µ–º–ª—è
4. **–ö–æ–Ω—Å–µ—Ä–≤–∞—Ü–∏—è** - —Ö–ª–æ—Ä–∫–∞ (1/8 —á.–ª. –Ω–∞ 20–ª)
5. **–†–æ—Ç–∞—Ü–∏—è** - –º–µ–Ω—è—Ç—å –≤–æ–¥—É –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤
6. **–ó–∞–ø–∞—Å** - 4 –ª–∏—Ç—Ä–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –¥–µ–Ω—å""",
                "category": "water"
            },

            r".*—Å–±–æ—Ä.*–¥–æ–∂–¥–µ–≤.*–≤–æ–¥.*|.*–¥–æ–∂–¥–µ–≤.*–≤–æ–¥.*": {
                "response": """üåßÔ∏è **–°–ò–°–¢–ï–ú–ê –°–ë–û–†–ê –î–û–ñ–î–ï–í–û–ô –í–û–î–´:**
1. **–ö—Ä—ã—à–∞** - –∂–µ–ª–æ–± + —Ç—Ä—É–±–∞ + –±–æ—á–∫–∞
2. **–¢–µ–Ω—Ç/–ø–ª–∞—â** - –≤–æ—Ä–æ–Ω–∫–∞ –≤ –µ–º–∫–æ—Å—Ç—å
3. **–Ø–º–∞** - –≤—ã–ª–æ–∂–∏—Ç—å –ø–ª–µ–Ω–∫–æ–π
4. **–î–µ—Ä–µ–≤—å—è** - –Ω–∞–∫–∏–Ω—É—Ç—å —Ç–∫–∞–Ω—å –Ω–∞ –≤–µ—Ç–∫–∏
5. **–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è** - –ø–µ—Å–æ–∫ + —É–≥–æ–ª—å –ø–µ—Ä–µ–¥ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º

**–í–∞–∂–Ω–æ:** –∫–∏–ø—è—Ç–∏—Ç—å –ø–µ—Ä–µ–¥ –ø–∏—Ç—å–µ–º!""",
                "category": "water"
            },

            r".*–µ–¥–∞.*–∑–∏–º–æ–π.*|.*–∑–∏–º.*–ø–∏—â.*|.*–¥–æ–±—ã—Ç—å.*–µ–¥—É.*–∑–∏–º–æ–π.*": {
                "response": """‚ùÑÔ∏è **–î–û–ë–´–ß–ê –ü–ò–©–ò –ó–ò–ú–û–ô:**
1. **–û—Ö–æ—Ç–∞** - —Å–ª–µ–¥—ã –Ω–∞ —Å–Ω–µ–≥—É, –∑–∞—Å–∞–¥—ã —É –≤–æ–¥–æ–ø–æ–µ–≤
2. **–†—ã–±–∞–ª–∫–∞** - –ø—Ä–æ—Ä—É–±–∏, –ø–æ–¥–ª–µ–¥–Ω–∞—è –ª–æ–≤–ª—è
3. **–°—É—à–µ–Ω—ã–µ –∑–∞–ø–∞—Å—ã** - –≥—Ä–∏–±—ã, —è–≥–æ–¥—ã, —Ç—Ä–∞–≤—ã
4. **–ö–æ—Ä–∞ –¥–µ—Ä–µ–≤—å–µ–≤** - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–ª–æ–π —Å–æ—Å–Ω—ã, –±–µ—Ä–µ–∑—ã
5. **–•–≤–æ–π–Ω—ã–µ –∏–≥–æ–ª–∫–∏** - —á–∞–π —Å –≤–∏—Ç–∞–º–∏–Ω–æ–º –°
6. **–ó–∏–º–Ω–∏–µ —è–≥–æ–¥—ã** - —Ä—è–±–∏–Ω–∞, –∫–∞–ª–∏–Ω–∞, —à–∏–ø–æ–≤–Ω–∏–∫""",
                "category": "food"
            },

            r".*–ª–æ–≤—É—à–∫.*|.*–ø–æ–π–º–∞—Ç—å.*–∂–∏–≤–æ—Ç–Ω.*|.*–¥–∏—á.*": {
                "response": """ü™§ **–ü–†–û–°–¢–´–ï –õ–û–í–£–®–ö–ò –î–õ–Ø –î–ò–ß–ò:**
1. **–ü–µ—Ç–ª—è** - –Ω–∞ –∑–≤–µ—Ä–∏–Ω—ã—Ö —Ç—Ä–æ–ø–∞—Ö
2. **–ó–∞–ø–∞–¥–Ω—è** - —è–º–∞ —Å –∫–æ–ª—å—è–º–∏
3. **–î–∞–≤–∏–ª–∫–∞** - –±—Ä–µ–≤–Ω–æ —Å –ø—Ä–∏–º–∞–Ω–∫–æ–π
4. **–°–∏–ª–æ–∫** - –¥–ª—è –ø—Ç–∏—Ü –∏ –º–µ–ª–∫–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
5. **–†—ã–±–æ–ª–æ–≤–Ω–∞—è** - –∏–∑ –ø–ª–∞—Å—Ç–∏–∫–æ–≤–æ–π –±—É—Ç—ã–ª–∫–∏

**–ü—Ä–∏–º–∞–Ω–∫–∞:** —è–≥–æ–¥—ã, –∑–µ—Ä–Ω–æ, —Å–æ–ª—å""",
                "category": "food"
            },

            r".*—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å.*–º—è—Å–æ.*|.*–º—è—Å–æ.*–±–µ–∑.*—Å–æ–ª–∏.*": {
                "response": """ü•© **–°–û–•–†–ê–ù–ï–ù–ò–ï –ú–Ø–°–ê –ë–ï–ó –°–û–õ–ò –ò –•–û–õ–û–î–ò–õ–¨–ù–ò–ö–ê:**
1. **–í—è–ª–µ–Ω–∏–µ** - –Ω–∞—Ä–µ–∑–∞—Ç—å —Ç–æ–Ω–∫–æ, —Å—É—à–∏—Ç—å –Ω–∞ –≤–µ—Ç—Ä—É
2. **–ö–æ–ø—á–µ–Ω–∏–µ** - —Ö–æ–ª–æ–¥–Ω—ã–π –¥—ã–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π
3. **–ñ–∏—Ä** - –∑–∞–ª–∏—Ç—å —Ä–∞—Å—Ç–æ–ø–ª–µ–Ω–Ω—ã–º –∂–∏—Ä–æ–º
4. **–ú–µ–¥** - –∑–∞–ª–∏—Ç—å –º–µ–¥–æ–º –∫–∞–∫ –∫–æ–Ω—Å–µ—Ä–≤–∞–Ω—Ç–æ–º
5. **–ó–∞–∫–∞–ø—ã–≤–∞–Ω–∏–µ** - –≤ —Å—É—Ö–æ–π –ø–µ—Å–æ–∫ –∏–ª–∏ –∑–æ–ª—É
6. **–ú–æ—Ä–æ–∑** - –∑–∏–º–æ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö–æ–ª–æ–¥""",
                "category": "food"
            },

            r".*–≤—ã—Ä–∞—Å—Ç–∏—Ç—å.*–æ–≤–æ—â.*|.*—Å–µ–º–µ–Ω.*|.*–æ–≥–æ—Ä–æ–¥.*": {
                "response": """üå± **–í–´–†–ê–©–ò–í–ê–ù–ò–ï –û–í–û–©–ï–ô –ò–ó –°–ï–ú–Ø–ù:**
1. **–ë—ã—Å—Ç—Ä—ã–µ –∫—É–ª—å—Ç—É—Ä—ã:** —Ä–µ–¥–∏—Å (20 –¥–Ω–µ–π), —Å–∞–ª–∞—Ç (30 –¥–Ω–µ–π)
2. **–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ:** –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, –º–æ—Ä–∫–æ–≤—å, –∫–∞–ø—É—Å—Ç–∞
3. **–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:** –≤–µ–¥—Ä–∞, —è—â–∏–∫–∏, –º–µ—à–∫–∏ —Å –∑–µ–º–ª–µ–π
4. **–£–¥–æ–±—Ä–µ–Ω–∏—è:** –∑–æ–ª–∞, –∫–æ–º–ø–æ—Å—Ç, —Ä—ã–±–Ω—ã–µ –æ—Ç—Ö–æ–¥—ã
5. **–ü–æ–ª–∏–≤:** –¥–æ–∂–¥–µ–≤–∞—è –≤–æ–¥–∞, —Ä–æ—Å–∞
6. **–ó–∞—â–∏—Ç–∞:** —Å–µ—Ç–∫–∏ –æ—Ç –ø—Ç–∏—Ü, –∑–æ–ª–∞ –æ—Ç –Ω–∞—Å–µ–∫–æ–º—ã—Ö""",
                "category": "food"
            },

            r".*–º—ã–ª–æ.*|.*—á–∏—Å—Ç—è—â.*—Å—Ä–µ–¥—Å—Ç–≤.*|.*–≥–∏–≥–∏–µ–Ω.*": {
                "response": """üßº **–°–ê–ú–û–î–ï–õ–¨–ù–û–ï –ú–´–õ–û –ò –ß–ò–°–¢–Ø–©–ò–ï –°–†–ï–î–°–¢–í–ê:**
1. **–ó–æ–ª—å–Ω–æ–µ –º—ã–ª–æ** - –∑–æ–ª–∞ + –∂–∏—Ä + –≤–æ–¥–∞
2. **–ú—ã–ª—å–Ω—ã–µ –æ—Ä–µ—Ö–∏** - –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –º–æ—é—â–∏–µ
3. **–°–æ–¥–∞** - –¥–ª—è —á–∏—Å—Ç–∫–∏ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏–∏
4. **–£–∫—Å—É—Å** - –ø—Ä–æ—Ç–∏–≤ –Ω–∞–∫–∏–ø–∏ –∏ –∑–∞–ø–∞—Ö–æ–≤
5. **–•–≤–æ—è** - –æ—Ç–≤–∞—Ä –¥–ª—è –º—ã—Ç—å—è –ø–æ—Å—É–¥—ã
6. **–ü–µ—Å–æ–∫** - –∞–±—Ä–∞–∑–∏–≤ –¥–ª—è —á–∏—Å—Ç–∫–∏""",
                "category": "hygiene"
            },

            r".*–ø–∞–Ω–∏–∫.*|.*—Å—Ç—Ä–∞—Ö.*|.*–±–µ–∑—ã—Å—Ö–æ–¥–Ω–æ—Å—Ç.*": {
                "response": """üò® **–ë–û–†–¨–ë–ê –° –ü–ê–ù–ò–ö–û–ô –ò –°–¢–†–ê–•–û–ú:**
1. **–î—ã—Ö–∞–Ω–∏–µ** - –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö, –º–µ–¥–ª–µ–Ω–Ω—ã–π –≤—ã–¥–æ—Ö
2. **–§–æ–∫—É—Å–∏—Ä–æ–≤–∫–∞** - –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö
3. **–†–µ–∂–∏–º –¥–Ω—è** - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–º–æ–≥–∞–µ—Ç
4. **–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å** - —Å–∂–∏–≥–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å
5. **–†–∞–∑–≥–æ–≤–æ—Ä** - –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏
6. **–û—Ç–¥—ã—Ö** - —Å–ø–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —á–∞—Å–æ–≤""",
                "category": "psychology"
            },

            r".*–æ—Ç–Ω–æ—à–µ–Ω.*–≤—ã–∂–∏–≤—à.*|.*–∞–ª—å—è–Ω—Å.*|.*–≥—Ä—É–ø–ø.*": {
                "response": """ü§ù **–°–û–ó–î–ê–ù–ò–ï –ê–õ–¨–Ø–ù–°–û–í –° –í–´–ñ–ò–í–®–ò–ú–ò:**
1. **–û—Å—Ç–æ—Ä–æ–∂–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç** - –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏
2. **–û–±–º–µ–Ω —Ä–µ—Å—É—Ä—Å–∞–º–∏** - –µ–¥–∞ –Ω–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞
3. **–û–±—â–∏–µ —Ü–µ–ª–∏** - –∑–∞—â–∏—Ç–∞, –¥–æ–±—ã—á–∞ –ø–∏—â–∏
4. **–ß–µ—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞** - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π
5. **–ò—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫** - 2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
6. **–í—ã—Ö–æ–¥–Ω—ã–µ –ø—É—Ç–∏** - –ø–ª–∞–Ω –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫""",
                "category": "community"
            },

            r".*–ø—Ä–∞–≤–∏–ª.*—Å–æ–æ–±—â–µ—Å—Ç–≤.*|.*–∑–∞–∫–æ–Ω.*–≥—Ä—É–ø–ø.*": {
                "response": """üìú **–ü–†–ê–í–ò–õ–ê –î–õ–Ø –°–û–û–ë–©–ï–°–¢–í–ê –í–´–ñ–ò–í–®–ò–•:**
1. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ** - –Ω–æ—á–Ω—ã–µ –¥–µ–∂—É—Ä—Å—Ç–≤–∞
2. **–†–∞–≤–Ω—ã–π —Ç—Ä—É–¥** - –∫–∞–∂–¥—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç
3. **–û–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã** - —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
4. **–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è** - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø–æ –≤–∞–∂–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º
5. **–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã** - —Ç—Ä–µ—Ç–µ–π—Å–∫–∏–π —Å—É–¥
6. **–ò–∑–≥–Ω–∞–Ω–∏–µ** - –∑–∞ –≤–æ—Ä–æ–≤—Å—Ç–≤–æ –∏–ª–∏ –Ω–∞—Å–∏–ª–∏–µ""",
                "category": "community"
            },

            r".*—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å.*–∑–∞–¥–∞—á.*|.*–æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç.*–≥—Ä—É–ø–ø.*": {
                "response": """üë• **–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ó–ê–î–ê–ß –í –ì–†–£–ü–ü–ï:**
1. **–û—Ö—Ä–∞–Ω–Ω–∏–∫–∏** - –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
2. **–î–æ–±—ã—Ç—á–∏–∫–∏** - –µ–¥–∞, –≤–æ–¥–∞, —Ä–µ—Å—É—Ä—Å—ã
3. **–ú–µ–¥–∏–∫–∏** - –∑–¥–æ—Ä–æ–≤—å–µ, –≥–∏–≥–∏–µ–Ω–∞
4. **–°—Ç—Ä–æ–∏—Ç–µ–ª–∏** - —É–∫—Ä—ã—Ç–∏–µ, —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è
5. **–ü–æ–≤–∞—Ä–∞** - –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∏—â–∏
6. **–†–∞–∑–≤–µ–¥—á–∏–∫–∏** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏

**–°–º–µ–Ω–∞:** –º–µ–Ω—è—Ç—å –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é""",
                "category": "community"
            },

            r".*–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤.*|.*—Ä–∞—Å—Å—É–¥–æ–∫.*|.*–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫.*–∑–¥–æ—Ä–æ–≤.*": {
                "response": """üß† **–ë–û–†–¨–ë–ê –° –û–î–ò–ù–û–ß–ï–°–¢–í–û–ú:**
1. **–†–µ–∂–∏–º –¥–Ω—è** - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è
2. **–•–æ–±–±–∏** - —á—Ç–µ–Ω–∏–µ, —Ä–∏—Å–æ–≤–∞–Ω–∏–µ, –º—É–∑—ã–∫–∞
3. **–î–Ω–µ–≤–Ω–∏–∫** - –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –º—ã—Å–ª–∏ –∏ —Å–æ–±—ã—Ç–∏—è
4. **–§–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è** - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç–æ–Ω—É—Å
5. **–†–∞–∑–≥–æ–≤–æ—Ä—ã —Å —Å–æ–±–æ–π** - –≤—Å–ª—É—Ö, —á—Ç–æ–±—ã —Å–ª—ã—à–∞—Ç—å –≥–æ–ª–æ—Å
6. **–¶–µ–ª–∏** - —Å—Ç–∞–≤–∏—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ achievable —Ü–µ–ª–∏""",
                "category": "psychology"
            },

            # –ú–ï–î–ò–¶–ò–ù–ê –ò –ì–ò–ì–ò–ï–ù–ê
            r".*–∏–Ω—Ñ–µ–∫—Ü.*|.*–∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫.*|.*–∑–∞—Ä–∞–∂–µ–Ω.*—Ä–∞–Ω.*": {
                "response": """ü¶† **–õ–ï–ß–ï–ù–ò–ï –ò–ù–§–ï–ö–¶–ò–ò –ë–ï–ó –ê–ù–¢–ò–ë–ò–û–¢–ò–ö–û–í:**
1. **–ß–µ—Å–Ω–æ–∫** - –ø—Ä–∏—Ä–æ–¥–Ω—ã–π –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫
2. **–ú–µ–¥** - –Ω–∞ —Ä–∞–Ω—ã, –ø—Ä–æ—Ç–∏–≤ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è
3. **–•—Ä–µ–Ω** - –∫–æ–º–ø—Ä–µ—Å—Å—ã –Ω–∞ —Ä–∞–Ω—ã
4. **–ö–æ—Ä–∞ –∏–≤—ã** - —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∞–ª–∏—Ü–∏–ª–æ–≤—É—é –∫–∏—Å–ª–æ—Ç—É
5. **–ß–∞–π tree oil** - –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –∑–∞–ø–∞—Å–∞—Ö
6. **–ß–∏—Å—Ç–æ—Ç–∞** - –≥–ª–∞–≤–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –ø—Ä–æ—Ç–∏–≤ –∏–Ω—Ñ–µ–∫—Ü–∏–π""",
                "category": "medical"
            },

            r".*–æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â.*|.*–±–æ–ª—å.*|.*–ø—Ä–∏—Ä–æ–¥–Ω.*—Å—Ä–µ–¥—Å—Ç–≤.*": {
                "response": """üíä **–ü–†–ò–†–û–î–ù–´–ï –û–ë–ï–ó–ë–û–õ–ò–í–ê–Æ–©–ò–ï:**
1. **–ò–≤–∞** - –∫–æ—Ä–∞ (–∞—Å–ø–∏—Ä–∏–Ω)
2. **–ú—è—Ç–∞** - —á–∞–π –æ—Ç –≥–æ–ª–æ–≤–Ω–æ–π –±–æ–ª–∏
3. **–†–æ–º–∞—à–∫–∞** - –ø—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ
4. **–ö—Ä–∞–ø–∏–≤–∞** - –∫–æ–º–ø—Ä–µ—Å—Å—ã –æ—Ç —Å—É—Å—Ç–∞–≤–Ω–æ–π –±–æ–ª–∏
5. **–ß–µ—Å–Ω–æ–∫** - –ø—Ä–∏ –∑—É–±–Ω–æ–π –±–æ–ª–∏
6. **–•–æ–ª–æ–¥/—Ç–µ–ø–ª–æ** - –∫–æ–º–ø—Ä–µ—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –±–æ–ª–∏""",
                "category": "medical"
            },

            r".*–≥–∏–≥–∏–µ–Ω.*|.*—á–∏—Å—Ç–æ—Ç.*|.*–±–æ–ª–µ–∑–Ω.*–∞–Ω—Ç–∏—Å–∞–Ω–∏—Ç–∞—Ä.*": {
                "response": """üöø **–ì–ò–ì–ò–ï–ù–ê –í –ê–ù–¢–ò–°–ê–ù–ò–¢–ê–†–ù–´–• –£–°–õ–û–í–ò–Ø–•:**
1. **–ú—ã—Ç—å–µ —Ä—É–∫** - –ø–æ—Å–ª–µ —Ç—É–∞–ª–µ—Ç–∞, –ø–µ—Ä–µ–¥ –µ–¥–æ–π
2. **–í–æ–¥–∞ + –∑–æ–ª–∞** - –∑–∞–º–µ–Ω–∞ –º—ã–ª—É
3. **–û—Ç–¥–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ** - –¥–ª—è —Ç—É–∞–ª–µ—Ç–∞ –≤–¥–∞–ª–∏ –æ—Ç –∂–∏–ª—å—è
4. **–°–º–µ–Ω–∞ –æ–¥–µ–∂–¥—ã** - —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Å—Ç–∏—Ä–∞—Ç—å
5. **–ß–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤** - —É–≥–æ–ª—å + —Å–æ–ª—å
6. **–ë–æ—Ä—å–±–∞ —Å –Ω–∞—Å–µ–∫–æ–º—ã–º–∏** - –¥—ã–º, —Ç—Ä–∞–≤—ã

**–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞:** –ª—É—á—à–µ —á–µ–º –ª–µ—á–µ–Ω–∏–µ!""",
                "category": "hygiene"
            }
        }

    def find_expert_advice(self, query):
        query_lower = query.lower()
        for pattern, knowledge in self.knowledge_base.items():
            if re.search(pattern, query_lower):
                return knowledge
        return None

    def get_categories(self):
        categories = set()
        for knowledge in self.knowledge_base.values():
            categories.add(knowledge["category"])
        return sorted(categories)


api = FusionBrainAPI('https://api-key.fusionbrain.ai/', '375267412DEC77B1A0214E69EEEA3771',
                     'C8037A1589CF8AB7E078D022E9591B2B')
openai_api = "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"

client = OpenAI(api_key=openai_api)
expert_system = ExpertSystem()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = "8340217117:AAE1gDJOWr6V_bu7K1P_1oZC7vk5j8w4X5E"
bot = telebot.TeleBot(BOT_TOKEN)

user_states = {}


def text_to_speech(text: str) -> Optional[BytesIO]:
    try:
        if len(text) > 4096:
            text = text[:4096] + "..."

        with tempfile.NamedTemporaryFile(suffix=".mp3", delete=False) as temp_file:
            temp_path = temp_file.name

        response = client.audio.speech.create(
            model="tts-1",
            voice="alloy",
            input=text,
        )

        response.stream_to_file(temp_path)

        with open(temp_path, 'rb') as f:
            audio_bytes = f.read()

        os.unlink(temp_path)
        return BytesIO(audio_bytes)

    except Exception as e:
        logging.error(f"TTS error: {e}")
        return None


def generate_expert_response(message, expert_data):
    try:
        bot.send_message(message.chat.id, expert_data["response"])

    except Exception as e:
        logging.error(f"Expert response error: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞")


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    help_text = """üöÄ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –≤—ã–∂–∏–≤—à–∏–π! –≠—Ç–æ apokalipsis_ai - —Ç–≤–æ–π –≥–∏–¥ –ø–æ –ø–æ—Å—Ç-–∞–ø–æ–∫–∞–ª–∏–ø—Ç–∏—á–µ—Å–∫–æ–º—É –º–∏—Ä—É.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/tts - –æ–∑–≤—É—á—É –ª—é–±–æ–π —Ç–µ–∫—Å—Ç
/advice - —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –≤—ã–∂–∏–≤–∞–Ω–∏—é  
/generate - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
/quick - –±—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
/categories - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–µ–º—ã –ø–æ –≤—ã–∂–∏–≤–∞–Ω–∏—é

üí° –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–º–∞–º:
‚Ä¢ –ë–∞–∑–æ–≤–æ–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ –∏ —É–∫—Ä—ã—Ç–∏—è
‚Ä¢ –û—Ä—É–∂–∏–µ –∏ —Å–∞–º–æ–æ–±–æ—Ä–æ–Ω–∞  
‚Ä¢ –ú–µ–¥–∏—Ü–∏–Ω–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ
‚Ä¢ –ü–∏—Ç–∞–Ω–∏–µ –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ
‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –∏ —Å–≤—è–∑—å
‚Ä¢ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –≤—ã–∂–∏–≤–∞–Ω–∏—è
‚Ä¢ –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ (–∑–æ–º–±–∏, –≤–∏—Ä—É—Å—ã, —Ä–∞–¥–∏–∞—Ü–∏—è)"""
    bot.reply_to(message, help_text)


@bot.message_handler(commands=['categories'])
def show_categories(message):
    categories = expert_system.get_categories()
    categories_text = "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–Ω–∞–Ω–∏–π:\n\n"
    for i, category in enumerate(categories, 1):
        categories_text += f"{i}. {category}\n"
    categories_text += "\nüí° –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –ø–æ –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö —Ç–µ–º!"
    bot.reply_to(message, categories_text)


@bot.message_handler(commands=['advice'])
def expert_advice(message):
    msg = bot.reply_to(message, "üß† –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ –≤—ã–∂–∏–≤–∞–Ω–∏—é:")
    bot.register_next_step_handler(msg, process_expert_query)


def process_expert_query(message):
    if not message.text:
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å.")
        return

    expert_data = expert_system.find_expert_advice(message.text)

    if expert_data:
        generate_expert_response(message, expert_data)
    else:
        categories = expert_system.get_categories()
        categories_list = ", ".join(categories)
        bot.reply_to(message, f"‚ùå –í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.\n\nüìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã: {categories_list}")


@bot.message_handler(commands=['tts'])
def tts_command(message):
    msg = bot.reply_to(message, "üé§ –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏:")
    bot.register_next_step_handler(msg, process_tts)


def process_tts(message):
    if not message.text or message.text.startswith('/'):
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏.")
        return

    bot.send_chat_action(message.chat.id, 'record_voice')
    try:
        audio_buffer = text_to_speech(message.text)
        if audio_buffer:
            bot.send_voice(message.chat.id, audio_buffer)
        else:
            bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç")
    except Exception as e:
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∑–≤—É—á–∫–µ —Ç–µ–∫—Å—Ç–∞")


@bot.message_handler(commands=['quick'])
def quick_generate(message):
    msg = bot.reply_to(message, "üé® –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
    bot.register_next_step_handler(msg, process_quick_prompt)


def process_quick_prompt(message):
    if not message.text or message.text.startswith('/'):
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return

    bot.send_chat_action(message.chat.id, 'typing')
    pipeline_id = api.get_pipeline()

    if not pipeline_id:
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
        return

    bot.send_message(message.chat.id, "‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
    task_id = api.generate(prompt=message.text, pipeline_id=pipeline_id)

    if not task_id:
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        return

    image_data = api.check_generation(task_id, attempts=20, delay=5)

    if image_data:
        try:
            image_bytes = base64.b64decode(image_data[0])
            photo_stream = BytesIO(image_bytes)
            bot.send_photo(message.chat.id, photo_stream)
        except Exception as e:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    else:
        bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")


@bot.message_handler(commands=['generate'])
def start_generation(message):
    user_id = message.from_user.id
    user_states[user_id] = {
        'step': 'waiting_prompt',
        'params': {
            'width': 1024,
            'height': 1024,
            'style': 'DEFAULT',
            'negative_prompt': 'dark colours, blurry, low quality'
        }
    }

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton("512x512")
    btn2 = types.KeyboardButton("768x768")
    btn3 = types.KeyboardButton("1024x1024")
    btn4 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (1024x1024)")
    markup.add(btn1, btn2, btn3, btn4)

    msg = bot.reply_to(message, "üìê –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_size_step)


def process_size_step(message):
    user_id = message.from_user.id
    if user_id not in user_states:
        return

    size_map = {
        "512x512": (512, 512),
        "768x768": (768, 768),
        "1024x1024": (1024, 1024)
    }

    if message.text in size_map:
        user_states[user_id]['params']['width'], user_states[user_id]['params']['height'] = size_map[message.text]

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton("DEFAULT")
    btn2 = types.KeyboardButton("ANIME")
    btn3 = types.KeyboardButton("FANTASY")
    btn4 = types.KeyboardButton("REALISTIC")
    btn5 = types.KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (DEFAULT)")
    markup.add(btn1, btn2, btn3, btn4, btn5)

    msg = bot.reply_to(message, "üé® –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_style_step)


def process_style_step(message):
    user_id = message.from_user.id
    if user_id not in user_states:
        return

    if message.text in ["DEFAULT", "ANIME", "FANTASY", "REALISTIC"]:
        user_states[user_id]['params']['style'] = message.text

    markup = types.ReplyKeyboardRemove()
    msg = bot.reply_to(message,
                       "üö´ –í–≤–µ–¥–∏—Ç–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç (—á—Ç–æ –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è) –∏–ª–∏ '-' –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞:",
                       reply_markup=markup)
    bot.register_next_step_handler(msg, process_negative_prompt_step)


def process_negative_prompt_step(message):
    user_id = message.from_user.id
    if user_id not in user_states:
        return

    if message.text != '-':
        user_states[user_id]['params']['negative_prompt'] = message.text

    msg = bot.reply_to(message, "‚ú® –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
    bot.register_next_step_handler(msg, process_final_prompt)


def process_final_prompt(message):
    user_id = message.from_user.id
    if user_id not in user_states or not message.text:
        return

    bot.send_chat_action(message.chat.id, 'typing')
    params = user_states[user_id]['params']
    prompt = message.text

    params_text = f"""
üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:
‚Ä¢ –†–∞–∑–º–µ—Ä: {params['width']}x{params['height']}
‚Ä¢ –°—Ç–∏–ª—å: {params['style']}
‚Ä¢ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç: {params['negative_prompt']}
‚Ä¢ –ó–∞–ø—Ä–æ—Å: {prompt}

‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...
    """
    bot.send_message(message.chat.id, params_text)

    pipeline_id = api.get_pipeline()
    if not pipeline_id:
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.")
        del user_states[user_id]
        return

    task_id = api.generate(
        prompt=prompt,
        pipeline_id=pipeline_id,
        width=params['width'],
        height=params['height'],
        style=params['style'],
        negative_prompt=params['negative_prompt']
    )

    if not task_id:
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.")
        del user_states[user_id]
        return

    image_data = api.check_generation(task_id, attempts=25, delay=5)

    if image_data:
        try:
            image_bytes = base64.b64decode(image_data[0])
            photo_stream = BytesIO(image_bytes)
            bot.send_photo(message.chat.id, photo_stream, caption="üñº –í–∞—à–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
        except Exception as e:
            logging.error(f"Error sending photo: {e}")
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    else:
        bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")

    if user_id in user_states:
        del user_states[user_id]


@bot.message_handler(func=lambda message: True)
def handle_text_message(message):
    if not message.text:
        return

    expert_data = expert_system.find_expert_advice(message.text)
    if expert_data:
        generate_expert_response(message, expert_data)
        return

    if message.text == "–∫–∞–∫ –≤—ã–∂–∏—Ç—å –≤ –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–µ?":
        response = """1)–ü–µ—Ä–µ–¥ –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–æ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∞—Å–∏—Å—å –µ–¥—ã –∏ –≤–æ–¥—ã
2)–ù–∞–π–¥–∏ –æ—Ä—É–∂–∏–µ
3)–ó–∞–ø—Ä–∏—Å—å –≤ —É–∫—Ä–æ–º–Ω–æ–º –º–µ—Å—Ç–µ
4)–†–∞—Å—Ö–æ–¥—É–π –≤–æ–¥—É,–µ–¥—É –∏ –∫–∞–ª–æ—Ä–∏–∏ –ø–æ –º–∏–Ω–∏–º—É–º—É
5)–ï—Å–ª–∏ –∫ —Ç–µ–±–µ –ø—Ä–∏–¥—É—Ç –Ω–µ–¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª–∏,—Å—Ç—Ä–µ–ª—è–π –≤ –Ω–∏—Ö –∏–∑ –æ—Ä—É–∂–∏—è(–ª—É—á—à–µ –ø–æ—Å—Ç–∞–≤—å –ª–æ–≤—É—à–∫–∏ –∑–∞—Ä–∞–Ω–µ–µ)
6)–í—ã—Ö–æ–¥–∏ –Ω–∞ —É–ª–∏—Ü—É —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ,–µ—Å–ª–∏ —É —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –µ–¥–∞ –∏ –≤–æ–¥–∞"""
        bot.reply_to(message, response)
    else:
        categories = expert_system.get_categories()
        categories_list = ", ".join(categories[:5])
        bot.reply_to(message, f"ü§ñ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /advice, /tts, /quick, /generate\n\nüí° –ò–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–º–∞–º: {categories_list}...")


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True, interval=1)
